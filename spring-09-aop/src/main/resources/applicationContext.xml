<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd

        http://www.springframework.org/schema/aop
		https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userService" class="com.kuang.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.kuang.log.BeforeLog"/>
    <bean id="afterLog" class="com.kuang.log.AfterLog"/>


    <!--方式三，使用注解的方式实现AOP，自定义一个切片类-->
    <bean id="annotationPointCut" class="com.kuang.diy.AnnotationPointCut"/>
    <!--开启自动注解支持，
    代理模式实现方式：默认是JDK基于接口实现的proxy-targer-class="fasle"
    而cgbin是基于类实现的proxy-targer-class="true"-->
    <aop:aspectj-autoproxy/>
    <!--<aop:aspectj-autoproxy proxy-target-class="false"/>-->


<!--
    &lt;!&ndash;方式二，自定义类DiyPointcut&ndash;&gt;
    <bean id="diy" class="com.kuang.diy.DiyPointcut"/>
    <aop:config>
        &lt;!&ndash;aspect自定义切面，ref为要引用的类&ndash;&gt;
        <aop:aspect ref="diy">
            &lt;!&ndash;pointcut切入点&ndash;&gt;
            &lt;!&ndash;execution(修饰符  返回值  包名.类名/接口名.方法名(参数列表))注意老师忽略掉修饰符了,不写默认为public&ndash;&gt;
            <aop:pointcut id="point" expression="execution(* com.kuang.service.UserServiceImpl.*(..)))"/>
            &lt;!&ndash;通知&ndash;&gt;
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>
-->


<!--
    &lt;!&ndash;方式一，使用原生Spring API接口&ndash;&gt;
    &lt;!&ndash;配置aop,还需要导入aop约束&ndash;&gt;
    <aop:config>
        &lt;!&ndash;切入点：expression:表达式，execution（要执行的位置）&ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* com.kuang.service.UserServiceImpl.*(..))"/>

        &lt;!&ndash;UserServiceImpl.*(..) -> UserServiceImpl类下的所以方法(参数)&ndash;&gt;
        &lt;!&ndash;执行环绕增加&ndash;&gt;
        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
        &lt;!&ndash; 环绕,在id="pointcut"的前后切入 &ndash;&gt;
    </aop:config>
-->

</beans>